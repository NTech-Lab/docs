.. _plugins-about:

How to Use Plugins
=============================

.. rubric:: In this section:

.. contents::
   :local:


Authentication
----------------------

All methods used in plugins require a user-based authentication. In order to authenticate, you should pass a user id or user object as a method argument. 


Common Object Types
-------------------------

Face
^^^^^^^^^^^^

Represents a human face. Note that it might be several faces on a single photo. Different photos of the same person as also considered to be
different faces.

* ``"id" (number)``: unique identifier of the face generated by API.
* ``"timestamp" (string)``: time of face object creation as ISO8601 string.
* ``"photo" (string)``: URL of file name of a photo that had been used to create the face object.
*  ``"photo_hash" (string)``: Hash of the original photo. Note that identical photos will always have the same hash, and different photos will most certainly have different hashes. Don't interpret this value and don't make assumptions about particular hash function used for hash calculation.
*  ``"thumbnail" (string)``: URL of face thumbnail stored on FindFace servers.
*  ``"x1" (number)``: x coordinate of the top-left corner of face's bounding box on the original photo.
*  ``"y1" (number)``: y coordinate of the top-left corner of face's bounding box on the original photo.
*  ``"x2" (number)``: x coordinate of the bottom-right corner of face's bounding box on the original photo.
*  ``"y2" (number)``: y coordinate of the bottom-right corner of face's bounding box on the original photo.
*  ``"meta" (string)``: metadata string that you can use to store any information associated with the face.
*  ``"galleries" (string[])``: array of galleries names that have this face.

face object, *dictionary* (for example, returned by the ``from_extraction_face`` method)

.. _bbox:

Bounding Box (bbox)
^^^^^^^^^^^^^^^^^^^^^^^^^^

Represents a rectangle on a photo. Usually used as a face's bounding box. May be specified in two ways:

* Separated coordinates:
    * ``"x1" (number)``: x coordinate of the top-left corner of the bounding box.
    * ``"y1" (number)``: y coordinate of the top-left corner of the bounding box.
    * ``"x2" (number)``: x coordinate of the bottom-right corner of the bounding box.
    * ``"y2" (number)``: y coordinate of the bottom-right corner of the bounding box.
* Array of coordinates ``[x1, y1, x2, y2]``

The methods working with ``bbox`` accept both formats.

.. note::
   In some case the coordinates might be outside photo dimensions, including negative values.

User
^^^^^^^^^^^^^^^

Person
^^^^^^^^^^^^^^^^^

Implement Plugin to ``findface-facenapi``
------------------------------------------

To implement a plugin to ``findface-facenapi``, do the following:

#. Put a plugin into a directory of your choice. You can use several directories to store plugins.
#. Open the ``findface-facenapi`` configuration file.

   .. code::

      sudo vi /etc/findface-facenapi.ini

   .. warning::
      The ``findface-facenapi.ini`` content must be correct Python code.


#. Uncomment the ``plugins_dirs`` parameter and specify the comma-separated list of plugin directories. 

   .. code::

      plugins_dirs                   = '/etc/findface/plugins/video, /etc/findface/plugins/html'

#. Uncomment the ``plugins_enabled`` parameter and specify the comma-separated list of plugins to load, or an asterisk (*) to load all plugins. 
      
   .. code::

      plugins_enabled                = '*'



